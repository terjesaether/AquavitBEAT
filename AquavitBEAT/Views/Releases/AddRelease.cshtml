@model AquavitBEAT.Models.ReleaseViewModel

@{
    ViewBag.Title = "CreateRelease";
}

@section Styles {
    <link href="~/Content/bootstrap-select.min.css" rel="stylesheet" type="text/css" />
    @Styles.Render("~/Content/jqueryuicss")
}

<h2>Create a new great release</h2>


@using (Html.BeginForm("AddRelease", "Releases", FormMethod.Post, 
    new
            {
                enctype = "multipart/form-data",
                @class = "release-form"
            }))
{
                @Html.AntiForgeryToken()

                <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Release.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Release.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Release.Title, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Release.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.Release.Comment, new { @class = "form-control", rows = "5" } )
                @Html.ValidationMessageFor(model => model.Release.Comment, "", new { @class = "text-danger" })
            </div>

        </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.Release.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.Release.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Release.Price, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Release.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Release.ReleaseDate, new { htmlAttributes = new { @class = "form-control", id = "datepicker" } })
                            @Html.ValidationMessageFor(model => model.Release.ReleaseDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

        

                    <div class="form-group">
                        @*<div class="col-md-2 control-label">Release format urls:</div>*@

                        @*@foreach (var item in Model.Release.FormatTypes)
                        {

                            <div class="col-md-2">

                                <input class="form-control" type="text" name="@item.Format.FormatTypeName" value="" placeholder="@item.Format.FormatTypeName" />


                            </div>

                        }*@

                        @*@foreach (var item in Model.Release.FormatTypes2)
                        {
                            <div class="col-md-2">
                                <input class="form-control" type="text" name="@item.FormatName.ToString()_0" placeholder="@item.FormatName.ToString()" />
                            </div>
                        }*@

                        

                        </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.Release.ReleaseType, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">

                                    @Html.DropDownListFor(model => model.Release.ReleaseType, Model.ItemsListOfAllReleaseTypes, new { @class = "form-control selectpicker", multiple = true })
                                    @Html.ValidationMessageFor(model => model.Release.ReleaseType, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.Release.FormatTypes, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @*@Html.DropDownList("FormatTypeId", null, "Choose format ...", htmlAttributes: new { @class = "form-control selectpicker", multiple = true })*@
                                    @Html.DropDownListFor(model => model.Release.FormatTypes, Model.ItemsListOfAllFormats, new { @class = "form-control selectpicker", multiple = true })
                                    @Html.ValidationMessageFor(model => model.Release.FormatTypes, "", new { @class = "text-danger" })

                                </div>

                            </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="SongId">Song(s)</label>
                        <div class="col-md-10">

                            @*@Html.DropDownList("SongId", null, "Choose songs ...", htmlAttributes: new { @class = "form-control selectpicker", multiple = true })*@
                            @Html.DropDownListFor(model => model.Release.SongToReleases, Model.ItemsListOfAllSongs, new { @class = "form-control selectpicker", multiple = true })

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-2 control-label">Release format urls:</div>
                    </div>

                    <div class="form-group">
                        @foreach (var b in Model.ListOfAllBuyOrStreamSites)
                        {

                            <div class="col-md-2">
                                <input class="form-control" type="text" name='@(b.Name + "_title")' value="" placeholder='@(b.Name + " Title")' />
                            </div>

                            <div class="col-md-4">
                                <input class="form-control" type="text" name="@b.Name" value="" placeholder="@b.Name" />
                            </div>
                            
                        }
                    </div>

                            <div class="form-group">
                                <div class="col-md-4 col-md-push-2">
                                    <input type="file" class="control-label inputfile" id="file" name="imageFront" accept="image/*" onchange="loadFile(event)" data-multiple-caption="{count} files selected" multiple>
                                    <label for="file"><strong>Choose a cover image</strong><span class="glyphicon glyphicon-open"></span></label>
                                </div>
                                    
                            </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            <img src="" alt="@Model.Release.Title" class="img-responsive img-rounded center-block" id="output" />
                        </div>
                    </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create a new great release" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/custom/fileInput.js" type="text/javascript"></script>
@Scripts.Render("~/bundles/jqueryui")
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script>
        $(document).ready(function () {

            var artistPicker = $('#ArtistId');
            var songPicker = $('#SongId');
            var formatPicker = $('#FormatTypeId');

            artistPicker.selectpicker({
                liveSearch: true,
                liveSearchStyle: 'contains',
                //mobile: true,
                title: 'Choose artist(s) ...',
                size: 10
            });

            songPicker.selectpicker({
                //liveSearch: true,
                //liveSearchStyle: 'contains',
                //mobile: true,
                title: 'Choose songs ...',
                size: 10
            });

            formatPicker.selectpicker({
                //liveSearch: true,
                //liveSearchStyle: 'contains',
                //mobile: true,
                title: 'Choose format(s) ...',
                size: 10
            });

            $("#datepicker").datepicker({
                dateFormat: "yy-mm-dd",
                changeYear: true

            });

        });

    </script>

}
