@model AquavitBEAT.Models.SongViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit @Model.Song.Title</h2>

@using (Html.BeginForm("EditSong", "Songs", FormMethod.Post, new
{
    enctype = "multipart/form-data",
    @class = "song-form"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Song.SongId)

        <div class="sidebar">
            
            
                <ul class="list-group">
                    @for (int i = 0; i < Model.ArtistCheckBoxes.Count(); i++)
                {
                        <li class="list-group-item artist-chbox-list">
                            @Html.EditorFor(m => Model.ArtistCheckBoxes[i].Checked, new { id = Model.ArtistCheckBoxes[i].Id })
                            @Html.DisplayFor(m => Model.ArtistCheckBoxes[i].Name)
                            

                            @Html.HiddenFor(m => Model.ArtistCheckBoxes[i].Id)
                            @Html.HiddenFor(m => Model.ArtistCheckBoxes[i].Name)
                        </li>
                    }
                </ul>
            @*<ul class="list-group">
                @foreach (var item in Model.ArtistCheckBoxes)
                {
                    <li class="list-group-item artist-chbox-list">
                        @Html.EditorFor(m => item.Checked, new { htmlAttributes = new { id = item.Id } })
                        
                        <input type="checkbox" value="@item.Name" checked="@item.Checked" name="checkbox_@item.Id" />
                        <label for="@item.Id">@item.Name</label>

                        @Html.HiddenFor(m => item.Id)
                        @Html.HiddenFor(m => item.Name)
                        @Html.HiddenFor(m => item.Checked)
                    </li>
                }
            </ul>*@

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Song.Title, htmlAttributes: new { @class = "control-label col-md-2 col-md-push-1" })
            <div class="col-md-4 col-md-push-1">
                @Html.EditorFor(model => model.Song.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Song.Title, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Song.RemixName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Song.RemixName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Song.RemixName, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.Song.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2 col-md-push-1" })
            <div class="col-md-4 col-md-push-1">
                @Html.EditorFor(model => model.Song.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Song.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        
            @Html.LabelFor(model => model.Song.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Song.Comment, new { htmlAttributes = new { @class = "form-control fixed-textarea" } })
                @Html.ValidationMessageFor(model => model.Song.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Song.AudioUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Song.AudioUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Song.AudioUrl, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Song.AudioUrl, htmlAttributes: new { @class = "control-label col-md-2 col-md-push-1" })
            <div class="col-md-4 col-md-push-1">
                @*@Html.EditorFor(model => model.Song.AudioUrl)*@
                <input type="file" name="audioFile" />
                
                
                @Html.ValidationMessageFor(model => model.Song.AudioUrl, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-6 col-md-push-2">
                <audio controls>
                    <source src="@Model.Song.AudioUrl" />
                </audio>
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script src="~/Scripts/bootstrap-select.js" type="text/javascript"></script>
    @Scripts.Render("~/bundles/jqueryui")
    @*<script src="~/Scripts/custom/selectPicker.js" type="text/javascript"></script>*@
    <script src="~/Scripts/custom/audioPlayerFix.js" type="text/javascript"></script>
    

}
